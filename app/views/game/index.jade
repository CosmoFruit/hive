doctype html
html(lang='en')
  head
    link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700')
    link(rel='stylesheet', href='/application.css')
    script(src='/application.js')
    script.
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-19202476-5', 'auto');
      ga('send', 'pageview');

  body(ng-app='hive')
    .game(ng-controller='gameCtrl')
      .left
        .board-container(board='hive')
          .game-timer
          .board
      .right
        .mdl-card.mdl-shadow--2dp.hive-card-wide
          .mdl-card__title
            h2.mdl-card__title-text {{hive.status || 'Play Hive'}}
          .mdl-card__supporting-text
          .mdl-card__actions.mdl-card--border
            a.mdl-button.mdl-button--colored.mdl-js-button.mdl-js-ripple-effect(ng-click='newGameRandom()' ng-class='{"mdl-button--disabled": !!hive && !hive.board.isGameover}')
              | VS Random
            a.mdl-button.mdl-button--colored.mdl-js-button.mdl-js-ripple-effect(ng-click='newGameAI()' ng-class='{"mdl-button--disabled": !!hive && !hive.board.isGameover}')
              | VS Computer
            a.mdl-button.mdl-button--colored.mdl-js-button.mdl-js-ripple-effect(ng-click='resignGame()' ng-class='{"mdl-button--disabled": !hive || hive.board.isGameover}')
              | Resign
        .mdl-card.mdl-shadow--2dp.hive-card-wide(ng-show='!hive')
          .mdl-card__title
            h2.mdl-card__title-text Development: Game Engine
          .mdl-card__supporting-text
              | The game engine is written in javascript with no 3rd party dependencies. It’s job is to keep game state and to emit events when moves are validated and processed.
          .mdl-card__actions.mdl-card--border
            a.mdl-button.mdl-button--colored.mdl-js-button.mdl-js-ripple-effect(href='https://github.com/shaw3257/hive')
              | Source Code
        .mdl-card.mdl-shadow--2dp.hive-card-wide(ng-show='!hive')
          .mdl-card__title
            h2.mdl-card__title-text Development: AI
          .mdl-card__supporting-text
            | The AI is also written in javascript with no 3rd party dependencies and is an implementation of the minimax algorithm with alpha beta pruning. It runs on the client-side in a separate thread via the Web Worker API
          .mdl-card__actions.mdl-card--border
            a.mdl-button.mdl-button--colored.mdl-js-button.mdl-js-ripple-effect(href='https://github.com/shaw3257/hive')
              | Source Code

        .mdl-card.mdl-shadow--2dp.hive-card-wide(ng-show='!hive')
          .mdl-card__title
            h2.mdl-card__title-text Development: Server
          .mdl-card__supporting-text
            | The hive server runs on Node.js via the Express framework. The decision to use Node.js was to use the game engine on the client-side and the server-side.
          .mdl-card__actions.mdl-card--border
            a.mdl-button.mdl-button--colored.mdl-js-button.mdl-js-ripple-effect(href='https://github.com/shaw3257/hive')
              | Source Code

        .mdl-card.mdl-shadow--2dp.hive-card-wide(ng-show='!hive')
          .mdl-card__title
            h2.mdl-card__title-text Development: UI
          .mdl-card__supporting-text
            | The UI uses the Canvas API along with Kinetic.js to render the pieces. The hexagonal grid was constructed with good ol’e fashion trigonometry.
          .mdl-card__actions.mdl-card--border
            a.mdl-button.mdl-button--colored.mdl-js-button.mdl-js-ripple-effect(href='https://github.com/shaw3257/hive')
              | Source Code